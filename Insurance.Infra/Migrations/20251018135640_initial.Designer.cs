// <auto-generated />
using System;
using Insurance.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Insurance.Infra.Migrations
{
    [DbContext(typeof(InsuranceDbContext))]
    [Migration("20251018135640_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Insurance.Core.Entities.InsuranceCoverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MaxCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceCoverages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxCapital = 500000000m,
                            MinCapital = 5000m,
                            Rate = 0.00520m,
                            Title = "پوشش جراحی"
                        },
                        new
                        {
                            Id = 2,
                            MaxCapital = 400000000m,
                            MinCapital = 4000m,
                            Rate = 0.00420m,
                            Title = "پوشش دندانپزشکی"
                        },
                        new
                        {
                            Id = 3,
                            MaxCapital = 200000000m,
                            MinCapital = 2000m,
                            Rate = 0.00400m,
                            Title = "پوشش بستری"
                        });
                });

            modelBuilder.Entity("Insurance.Core.Entities.InsuranceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("TotalPremium")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceRequests");
                });

            modelBuilder.Entity("Insurance.Core.Entities.RequestCoverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CalculatedPremium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Capital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CoverageId")
                        .HasColumnType("int");

                    b.Property<int>("InsuranceRequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoverageId");

                    b.HasIndex("InsuranceRequestId");

                    b.ToTable("RequestCoverages");
                });

            modelBuilder.Entity("Insurance.Core.Entities.RequestCoverage", b =>
                {
                    b.HasOne("Insurance.Core.Entities.InsuranceCoverage", "Coverage")
                        .WithMany("RequestCoverages")
                        .HasForeignKey("CoverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Insurance.Core.Entities.InsuranceRequest", "InsuranceRequest")
                        .WithMany("Coverages")
                        .HasForeignKey("InsuranceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coverage");

                    b.Navigation("InsuranceRequest");
                });

            modelBuilder.Entity("Insurance.Core.Entities.InsuranceCoverage", b =>
                {
                    b.Navigation("RequestCoverages");
                });

            modelBuilder.Entity("Insurance.Core.Entities.InsuranceRequest", b =>
                {
                    b.Navigation("Coverages");
                });
#pragma warning restore 612, 618
        }
    }
}
